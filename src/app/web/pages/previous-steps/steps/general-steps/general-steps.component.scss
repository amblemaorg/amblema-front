@import '../../previous-steps.component.scss';

.steps-accordion {

    * {
        color: map-get($color_map, blue);
    }

    p {
        text-align: justify;
    }

    .card {
        border: none;
        
        .card-header {
            border: none;
            background: transparent;

            .card-link {
                display: flex;
                flex-wrap: nowrap;
                align-items: center;
                border-bottom: 1px solid;
                padding: 0 0.25rem 0 0.5rem;

                @media screen and (orientation:landscape) and (min-width:640px) {
                    padding: 0 0.5rem 0 0.75rem;
                }
        
                .texts {
                    flex: 1;

                    @media screen and (orientation:landscape) and (min-width:640px) { display: flex; }
                }
                .arrow {
                    flex: 0 0 1.5rem;
                    text-align: right;
                }
                .bar {
                    display: none;
                    // display: block;            
                    border-left: 2px solid;         
                    height: 1.5rem;
                    margin-bottom: 0.25rem;

                    @media screen and (orientation:landscape) and (min-width:640px) { display: inline-block; }
                }

                .desktop-only {
                    display: none;

                    @media screen and (orientation:landscape) and (min-width:640px) { display: inline-block; }
                }

                &:hover {
                    color: map-get($color_map, blue);
                }

                fa-icon ::ng-deep svg{
                    -webkit-transition: transform .5s;
                    transition: transform .5s;
                }

                &[aria-expanded="true"], &.active-arrow {
                    fa-icon ::ng-deep svg{
                        transform: rotate(180deg);
                    }
                }
                &[aria-expanded="false"] {
                    fa-icon ::ng-deep svg{
                        transform: rotate(0deg);
                    }
                }

                &.not-enabled {
                    opacity: 0.75;
                    // cursor: not-allowed;
                }
             }
        }

        /* &:first-child {
            .card-link ::ng-deep fa-icon svg{
                transform: rotate(180deg);
            }
        } */

        .card-body {
            padding: 1rem 1.75rem;
            position: relative;

            @mixin card-body {
                padding: 1rem;
                width: 90%;
                margin-left: auto;
                margin-right: auto;
                display: flex;
                flex-wrap: wrap;
                justify-content: flex-end;
            }
            @media screen and (orientation:landscape) and (min-width:640px) { @include card-body; }
            @include mediabreak(large,portrait) { @include card-body; }
            @include mediabreak(large,landscape) { width: 94%; }
            @include mediabreak(larger,landscape,true,1680px) { width: 96%; }

            .toast {
                position: absolute;
                z-index: -1;
                right: 0;
                bottom: 5%;
                -webkit-transition: bottom .5s;
                transition: bottom .5s;

                @include mediabreak(large,landscape) { max-width: 30rem; }

                button:focus {
                    outline: none;
                }
                p {
                    padding: 0.25rem 1rem;
                }
            }
            .toast.show {
                z-index: 1;
                bottom: 20%;
            }

            .mobile-only {
                color: map-get($color_map, blue);
                margin-bottom: 1rem;

                @media screen and (orientation:landscape) and (min-width:640px) { display: none; }
                @include mediabreak(large,portrait) { margin-right: auto; width: 100%; }
            }

            .inactive {
                opacity: 0.65;
            }

            .first-p {
                @media screen and (orientation:landscape) and (min-width:640px) { width: 100%; }
                @include mediabreak(large,portrait) { width: 100%; }
            }

            .hide-upload-btn {
                display: none;
            }

            .form-group {
                width: 100%;
                
                input {                    
                    display: inline-block !important;
                    width: 100%;
                    @media screen and (orientation:landscape) {
                        width: auto;
                        margin-left: 1rem;   
                    }
                    @media screen and (orientation:portrait) and (min-width:480px) {
                        width: auto;
                        margin-left: 1rem;  
                    }              
                }
        
                .field-invalid{
                    font-size: smaller;
                    margin-block-start: 0.45rem;
                    color: map-get($color_map, red);
                    display: none;
        
                    @include mediabreak(small,portrait) { font-size: medium; }
                    @include mediabreak(large,portrait) { font-size: larger; }            
                }
                .not-enabled {
                    color: #6c757d;
                }
        
                .form-control:focus{
                    box-shadow: none;
                    border-color: map-get($color_map, blue);
                }
        
                .date-not-valid {
                    border-color: map-get($color_map, red);
                    color: map-get($color_map, red);
                }

                .date-not-valid + .field-alerts .field-invalid{
                    display: inline-block;
                }                
            }

            status-selector {
                width: 100%;

                ::ng-deep .form-group {
                    @mixin selector-group {
                        width: 25rem;
                        margin-left: auto;
                        display: flex;
                        align-items: center;
                    }
                    @media screen and (min-width:640px) and (orientation:landscape) { @include selector-group; }
                    @include mediabreak(large,portrait) { @include selector-group; }
                    @include mediabreak(large,landscape) { @include selector-group; }
                }
                ::ng-deep label {
                    @media screen and (min-width:640px) and (orientation:landscape) { margin-right: 1rem; }
                    @include mediabreak(large,portrait) { margin-right: 1rem; }
                    @include mediabreak(large,landscape) { margin-right: 1rem; }
                }

                ::ng-deep .ng-select {
                    flex: 1;
                    border-color: map-get($color_map, blue);
                    color: map-get($color_map, blue);

                    .ng-dropdown-panel {
                      z-index: 3;
              
                      .scroll-host {
                          left: -0.75rem;
                          top: 0.35rem;
                          background: #fff;
                          border: solid map-get($color_map, blue);
                          border-width: 0 1px 1px;
              
                          .scrollable-content{
                              padding: 0 1rem;
                          }
                      }
                    }
          
                    &.ng-select-opened .ng-select-container {
                        z-index: 3;           
                    }     
          
                    .ng-arrow-wrapper {
                        width: 1rem;
          
                        .ng-arrow {
                            height: 0.5rem;
                            width: 0.5rem;
                            border-color: map-get($color_map, blue);
                            border-style: solid;
                            border-width: 0 2px 2px 0;
                            -webkit-transform: rotate(45deg);
                            transform: rotate(45deg);
                            top: -0.15rem;
                        }
                    } 

                    &.readonly {
                        opacity: .65;
                    }
                }
            }             

            .video-container {
                margin-bottom: 1rem;
                @media screen and (orientation:landscape) and (min-width:640px) { width: 100%; }
                @include mediabreak(large,portrait) { width: 100%; }
            }
            .video {
                ::ng-deep iframe {
                    width: 100%;
                    height: 50vw;

                    @include mediabreak(medium,landscape,true,800px) { height: 42vw; }
                    @include mediabreak(small,portrait) { height: 45vw; }
                    @include mediabreak(large,landscape) { height: 36vw; }
                    @include mediabreak(larger,landscape) {
                        height: 33vw;
                        margin-top: 1rem;
                    }
                }
            }

            a.btn {
                @media screen and (orientation:landscape) and (min-width:640px) { margin-top: 0 !important; }
                @include mediabreak(large,portrait) { margin-top: 0 !important; }
            }
            .btn {
                @include btn-righted;
                color: #fff;
                span {
                    color: #fff;
                }

                @include mediabreak(large,landscape) { margin-right: 0; }

                &.has-several {
                    margin-top: 1.25rem !important;

                    @mixin has-several {
                        margin-top: 0 !important;
                        margin-left: 2.25rem;
                    }
                    @media screen and (orientation:landscape) and (min-width:640px) { @include has-several; }
                    @include mediabreak(large,portrait) { @include has-several; }
                }

                &.hidebtn {
                    display: none;
                }

                &:focus {
                    box-shadow: none;
                }
                &:hover {
                    background: #fff;
                    color: map-get($color_map, blue);

                    span {
                        color: map-get($color_map, blue);
                    }
                }
            }
            .attachfile {
                @media screen and (orientation:landscape) and (min-width:640px) { margin-top: 0 !important; }
                @include mediabreak(large,landscape) { margin-top: 0 !important; }
            }

            .checks-form {
                width: 100%;
                @mixin checks-form {
                    display: flex;
                    flex-wrap: wrap;
                }
                @media screen and (orientation:landscape) and (min-width:640px) { @include checks-form; }
                @include mediabreak(small,portrait) { @include checks-form; }

                .checks-btn-container{
                    width: 100%;
                    text-align: right;
                }
                &.has-siblings {
                    margin-top: 2rem;
                }
            }            
            .checkbox {
                @media screen and (orientation:landscape) and (min-width:640px) { flex: 0 0 50%; }
                @include mediabreak(small,portrait) { flex: 0 0 50%; }
                /* Customize the label (the container) */
                .check-container {
                    display: block;
                    position: relative;
                    padding-left: 3rem;
                    margin-bottom: 1.5rem;
                    cursor: pointer;
                    -webkit-user-select: none;
                    -moz-user-select: none;
                    -ms-user-select: none;
                    user-select: none;

                    /* Hide the browser's default checkbox */
                    input {
                        position: absolute;
                        opacity: 0;
                        cursor: pointer;
                        height: 0;
                        width: 0;

                        /* Show the checkmark when checked */
                        &:checked ~ .checkmark:after {
                            display: block;
                        }
                    }

                    /* Create a custom checkbox */
                    .checkmark {
                        position: absolute;
                        top: -0.15rem;
                        left: 0;
                        height: 1.75rem;
                        width: 1.75rem;
                        background-color: transparent;
                        border: 1px solid map-get($color_map, tab-gray);

                        @include mediabreak(large,landscape) { top: -0.25rem; }

                        /* Create the checkmark/indicator (hidden when not checked) */
                        &:after {
                            content: "";
                            position: absolute;
                            display: none;
                        }
                        /* Style the checkmark/indicator */
                        &:after {
                            left: 0.5rem;
                            top: 0.15rem;
                            width: 0.65rem;
                            height: 1.05rem;
                            border: solid #fff;
                            border-width: 0 4px 4px 0;
                            -webkit-transform: rotate(45deg);
                            -ms-transform: rotate(45deg);
                            transform: rotate(45deg);
                        }
                    }

                    /* On mouse-over, add a grey background color */
                    // &:hover input ~ .checkmark {
                    //     background-color: map-get($color_map, tab-gray);
                    // }
                    
                    /* When the checkbox is checked, add a blue background */
                    & input:checked ~ .checkmark {
                        background-color: map-get($color_map, blue);
                        border: 1px solid map-get($color_map, blue);
                    }
                }
            }


            // forms
            .has-form {
                width: 100%;
            }
        }
    }
}