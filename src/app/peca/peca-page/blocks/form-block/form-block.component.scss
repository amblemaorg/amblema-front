@import 'scss/placeholders';

@mixin form-mix {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
  align-items: baseline;

  @include mediabreak(large,landscape) { justify-content: space-between; }
}
@mixin form-flexings {
  @media screen and (orientation:landscape) and (min-width:640px) { max-width: 100%; flex: 0 0 100%; }
  @include mediabreak(large,portrait) { max-width: 100%; flex: 0 0 100%; }
  @include mediabreak(large,landscape) { max-width: 46.5%; flex: 0 0 46.5%; }
  @include mediabreak(larger,landscape) { max-width: 47.25%; flex: 0 0 47.25%; }
  @include mediabreak(larger,landscape,true,1680px) { max-width: 47.75%; flex: 0 0 47.75%; }
} 
@mixin form-flexings-one-row {
  @media screen and (orientation:landscape) and (min-width:640px) { max-width: 100%; flex: 0 0 100%; }
  @include mediabreak(large,portrait) { max-width: 100%; flex: 0 0 100%; }
  @include mediabreak(large,landscape) { max-width: 38%; flex: 0 0 38%; }
  @include mediabreak(larger,landscape) { max-width: 38%; flex: 0 0 38%; }
  @include mediabreak(larger,landscape,true,1680px) { max-width: 38%; flex: 0 0 38%; }
} 
@mixin for-image-widths {  
  width: 8rem;
  height: 8rem;
}

::ng-deep {
  form {    
    .fields-container {
      @media screen and (orientation:landscape) and (min-width:640px) { @include form-mix; }
      @include mediabreak(large,portrait) { @include form-mix; }
      &.one-row-form {
        align-items: center;
      }
      &.one-line {
        flex-wrap: nowrap;
      }

      h6, label {
        width: 100%;
      }

      label {
        margin-bottom: 0.2rem;
        color: $blue;
      }

      .image-group {
        display: flex;
        flex-wrap: wrap;
        width: 100%;
        margin-top: 1rem;
        margin-bottom: 1rem;
        
        .image-upload-btn-container {
          flex: 0 0 25%;
          display: flex;
          justify-content: center;
          align-items: center;
          position: relative;

          &.inside-modal {
            flex: 0 0 36%;
            justify-content: flex-start;

            i {
              -webkit-transform: translateX(55%);
              transform: translateX(55%);              
            }
          }

          button, img {
            @include for-image-widths;
            border: 1px solid $blue;            
          }

          .overlay, i {
            height: 0;
            opacity: 0;
            position: absolute;
            -webkit-transition: opacity .5s, color .5s;
            transition: opacity .5s, color .5s;
          }

          i {
            color: $blue;       
            font-size: 3rem;
            font-weight: bold;
            padding: 0;
            cursor: pointer;
            overflow: hidden;
            font-style: normal;

            &:hover {
              color: $red;

              & + .overlay {
                @include for-image-widths;
                opacity: 0.25;
                background: #000;  
                z-index: 0;          
              }
            }
          }

          img {
            object-fit: contain;

            &.show-remover + i {              
              -webkit-text-shadow: 0px 0px 8px rgba(0,0,0,0.25);
              text-shadow: 0px 0px 8px rgba(0,0,0,0.25);
              height: auto;
              padding: 1rem;
              opacity: 1;        
              z-index: 1;  
            }
          }
          
          button {
            color: $blue;
            background: transparent;

            &:focus {
              outline: none;
            }

            nb-icon {
              font-size: 4rem;
              display: inline;
            }
          }
        }

        &.solo-image {
          justify-content: center;
          
          .image-upload-btn-container {
            flex: 0;
          }
        }

        @media (max-width:768px) {
          .image-upload-btn-container {
            flex: 0 0 100%;
            padding: 30px;
          }
        }

        .image-fields {
          flex: 1;

          .input-container:not(:last-child) {
            margin-bottom: 1rem;
          }

          &.general-container {
            .input-container {
              width: 48%;
            }
            .input-container:not(.expand-wide):last-child {
              width: 48%;
            }
            .expand-wide {
              width: 100%;
            }
          }

          &.extra-fields-modal {
            .error-message {            
              color: $red;
              font-size: small;
            }
          }
          &.inside-modal {
            .input-container:not(:last-child) {
              margin-bottom: 0;
            } 

            .error-message {            
              color: $red;
              font-size: small;
            }

            .input-container:not(:first-child) {
              margin-top: 1rem;
            }

            &.general-container {
              .input-container {
                width: 100%;
              }
              .input-container:last-child {
                width: 100%;
              }
            }            
          }

          @media (max-width:768px) {
            .input-container {
              width: 100% !important;
            }
            .input-container:last-child {
              width: 100% !important;
            }
          }
        }

        .add-img-btn {
          margin-top: 1rem;
        }
      }

      .two-wrapper {
          @include form-mix;
          @include form-flexings;        

          .form-group {
              width: 100%;
          }
      }  
  
      .form-group {
        position: relative;
        
        &.one-row-form-form-group {
          @include form-flexings-one-row;
        }
        &:not(.one-row-form-form-group) {
          @include form-flexings;
        }
  
        .field-label {
          color: $blue
        }        

        .date-container {
            width: 100%;
            position: relative;
        }
      
        .error-message, .date-error-message {
          color: $red;
          font-size: 3.5vw;
        
          @include breakpoint(medium) {
            font-size: 2vw;
          }
        
          @include breakpoint(large) {
            font-size: .9vw;
          }
        }

        &.input-group {
          .input-group-prepend {
            width: 3.5rem;
          }
          .error-message {
            width: 100%;
          }
        }
      }

      textarea{
        resize: none;
        height: 130px;
      }

      .form-control {
        color: $blue;

        // &[readonly].form-control-date {
        &.is-date-input-placeholder.form-control-date {
          cursor: default;
          background-color: #fff;
          position: absolute;
          top: 2px;
          left: 2px;
          border: none;
          width: 80%;
          padding-bottom: 0 !important;
          height: auto;
        }

        &[readonly] {
          background-color: #fff;
        }

        &[type="date"]:focus + .form-control.is-date-input-placeholder.form-control-date {
          display: none;
        }
    
        &:focus {
          box-shadow: none;
        }
    
        &.ng-touched {
          &.ng-invalid, &.date-not-valid {
            border: 2px solid $red;
          }
    
          &.ng-valid:not(.date-not-valid):not(.image-description):not(.image-status) {
            &:focus.ng-dirty, &.ng-select-focused.ng-dirty {
              border: 2px solid $green;
            }            
          }

          &[readonly] {
            border: 1px solid map-get($color_map, form-gray) !important;
          }
          
          & ~ .error-message, &.ng-invalid.date-not-valid ~ .date-error-message {
            display: block;
          }

          &:not(.date-not-valid) ~ .date-error-message {
            display: none;
          }    
          
          &[readonly] ~ .date-error-message {
            display: none !important;
          }
        }

        &[readonly] {
          cursor: default;
          &:not(.is-date-input-placeholder):focus {
              border: 1px solid map-get($color_map, form-gray) !important;
          }
        }
    
        &.ng-untouched {
          & ~ .error-message, & ~ .date-error-message {
            display: none;
          }
        }
      }
        
      .ng-select {
          .ng-dropdown-panel {
            z-index: 3;
    
            .scroll-host {
                left: -0.75rem;
                top: 0.35rem;
                background: #fff;
                border: solid map-get($color_map, form-gray);
                border-width: 0 1px 1px;
    
                .scrollable-content{
                    padding: 0 1rem;
                }
            }
          }

          &.ng-select-opened .ng-select-container {
              z-index: 3;           
          }
          
          .ng-select-container {
              .ng-placeholder {
                  color: #6c757d;
              }

              &.ng-has-value .ng-placeholder {
                  display: none;
              }
          }         

          &.ng-untouched {
              &.ng-invalid .ng-select-container .ng-placeholder,
              &.image-status .ng-select-container .ng-placeholder {
                  display: block;
              }
              &.ng-valid:not(.image-status) .ng-select-container .ng-placeholder {
                  display: none;
              }
          }

          &.ng-touched {
            &.ng-pristine, 
            &.ng-invalid {
              .ng-select-container .ng-placeholder {
                  display: block;
              }
            }
            &.ng-invalid .ng-select-container .ng-placeholder {
                display: block !important;
            }
            &.ng-pristine:not(.image-status) .ng-select-container.ng-has-value .ng-placeholder {
                display: none;
            }
          }

          &.ng-dirty.is-in-modal:not(.image-status) .ng-select-container.ng-has-value .ng-placeholder {
              display: none;
          }

          &.ng-select-filtered .ng-select-container .ng-placeholder {
              display: none !important;
          }

          .ng-clear-wrapper .ng-clear {
              color: map-get($color_map, form-gray);
          }

          .ng-arrow-wrapper {
              width: 1rem;

              .ng-arrow {
                  height: 0.5rem;
                  width: 0.5rem;
                  border-color: map-get($color_map, form-gray);
                  border-style: solid;
                  border-width: 0 2px 2px 0;
                  -webkit-transform: rotate(45deg);
                  transform: rotate(45deg);
                  top: -0.15rem;
              }
          } 
      }
  
      .two-wrapper .form-group.full-width, 
      .form-group.full-width {
        max-width: 100%;
        flex: 0 0 100%;
      }

      two-wrapper .form-group.full-width2, 
      .form-group.full-width2 {
        max-width: 21.25%;
        flex: 0 0 21.25%;
      }
      @media (max-width:992px) {
        two-wrapper .form-group.full-width2, 
        .form-group.full-width2 {
          max-width: 100%;
          flex: 0 0 100%;
        }
      }
  
      .btn-container, 
      .image-group .add-img-btn {
        &:not(.one-row-form-btn-container) {
          width: 100%;
          text-align: right;
        }
        &.one-row-form-btn-container {
          width: 14%;
          text-align: right;
        }
        &.no-fields {
          width: auto;
          margin-left: auto;
          margin-top: auto;
          margin-bottom: auto;
        }

        &.on-this-line-btn {
          margin-top: auto;
          margin-bottom: auto;
        }
        
        .submit-btn, 
        .add-img-button {
          @include shared-btn-confs;
        }
        button {
          margin-right: 0;
        }
      }
      
      @media (max-width:768px) {
        .btn-container,
        .btn-container.one-row-form-btn-container,
        .image-group .add-img-btn {
          width: 100%;
          text-align: left !important;          
        }
      }
    }
  }
}