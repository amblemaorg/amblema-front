@import "./placeholders";

@mixin box($tr-x: -0.25rem, $width: 1.4rem, $height: 1.4rem) {
  content: "";
  width: $width;
  height: $height;
  background: transparent;
  position: absolute;
  border: 1px solid $blue;
  border-radius: 3px;
  top: 0.9rem;
  -moz-transform: translateX($tr-x);
  -o-transform: translateX($tr-x);
  -webkit-transform: translateX($tr-x);
  -ms-transform: translateX($tr-x);
  transform: translateX($tr-x);
}

@mixin check($tr-x: 1px, $top: 1.25rem, $width: 0.8rem, $height: 0.5rem) {
  content: "";
  width: $width;
  height: $height;
  background: transparent;
  display: block;
  position: absolute;
  border: 4px solid #fff;
  border-top-width: 0;
  top: $top;
  border-right-width: 0;
  -moz-transform: translateX($tr-x) rotate(-50deg);
  -o-transform: translateX($tr-x) rotate(-50deg);
  -webkit-transform: translateX($tr-x) rotate(-50deg);
  -ms-transform: translateX($tr-x) rotate(-50deg);
  transform: translateX($tr-x) rotate(-50deg);
}

@mixin form-mix {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
  align-items: baseline;

  @include mediabreak(large, landscape) {
    justify-content: space-between;
  }
}

@mixin form-flexings {
  @media screen and (orientation: landscape) and (min-width: 640px) {
    max-width: 100%;
    flex: 0 0 100%;
  }
  @media screen and (orientation: portrait) and (min-width: 768px) {
    max-width: 100%;
    flex: 0 0 100%;
  }
  @include mediabreak(large, landscape) {
    max-width: 46.5%;
    flex: 0 0 46.5%;
  }
  @include mediabreak(larger, landscape) {
    max-width: 47.25%;
    flex: 0 0 47.25%;
  }
  @include mediabreak(larger, landscape, true, 1680px) {
    max-width: 47.75%;
    flex: 0 0 47.75%;
  }
}

@mixin promoteWrapper {
  margin-top: 2rem;
  border: 1px solid $blue;
  border-radius: 10px;
  padding: 1rem;

  &.disabled {
    opacity: 0.65;
  }

  @content;
}

@mixin promoteH6($selector) {
  #{$selector} {
    color: $blue;
    font-size: medium;
    position: relative;
    top: -1.75rem;
    background: #fff;
    width: fit-content;
    padding-inline: 0.5rem;
    margin-bottom: -1rem;
    @content;
  }
}

@mixin promoteButton($selector) {
  #{$selector} {
    margin-left: auto;
    @include shared-btn-confs;

    @media (max-width: 768px) {
      margin: 10px 0px;
      margin-left: 0px !important;
      font-size: 0.7rem;
    }

    @content;
  }
}

@mixin isMulti($num) {
  table thead tr:first-child th:first-child input {
    opacity: 0;
  }
  table thead tr:first-child th:first-child::before {
    @include box;
  }
  &.is-checked table thead tr:first-child th:first-child::before,
  table tbody tr.selected td:first-child::before {
    background: $blue !important;
  }
  &.is-checked table thead tr:first-child th:first-child::after {
    @include check;
  }

  table tbody tr td:first-child input {
    opacity: 0;
    &:focus {
      box-shadow: none;
    }
  }
  @if $num == "6" {
    table tbody tr td:first-child:not([colspan="6"]):before {
      @include box(-0.75rem);
      margin-inline: auto;
    }
  } @else if $num == "7" {
    table tbody tr td:first-child:not([colspan="7"]):before {
      @include box(-0.75rem);
      margin-inline: auto;
    }
  }
  table tbody tr.selected td:first-child::after {
    @include check(1rem, 1.25rem);
  }
  @content;
}

@mixin tableConfs {
  .nb-theme-default ng2-smart-table table tr th,
  .nb-theme-default ng2-smart-table table tr th a {
    font-family: "Montserrat";
    font-weight: 300;
    font-style: normal;
    font-size: 0.8rem;
  }
  .nb-theme-default ng2-smart-table table tr td {
    font-family: "Montserrat";
    font-weight: 300;
    font-style: normal;
    font-size: 0.8rem;
  }
  .nb-theme-default ng2-smart-table table tr.ng2-smart-titles th a.sort.asc,
  .nb-theme-default ng2-smart-table table tr.ng2-smart-titles th a.sort.desc {
    font-weight: 300;
  }
  .nb-theme-default ng2-smart-table thead tr.ng2-smart-filters th {
    padding: 0.375rem 1rem;
  }
  .nb-theme-default ng2-smart-table table tr.ng2-smart-titles th {
    padding: 0.875rem 2rem 0;
    text-align: left;
  }
  .nb-theme-default ng2-smart-table.no-data table tr.ng2-smart-titles th {
    padding: 0.875rem 2rem;
    text-align: left;
  }
  .nb-theme-default ng2-smart-table .ng2-smart-actions {
    text-align: center !important;
  }
  @content;
}

@mixin tHead($selector) {
  #{$selector} {
    border: $table-border-color;

    tr.ng2-smart-filters
      th.ng2-smart-th
      ng2-smart-table-filter
      div.ng2-smart-filter
      default-table-filter
      input-filter {
      input,
      input.ng-valid {
        border: $table-border-color !important;

        &::placeholder {
          color: transparent !important;
        }
      }
    }

    tr {
      th {
        text-align: center;
        border: none !important;
        border-right: $table-border-color !important;

        &,
        a {
          color: $blue !important;
        }
      }
    }

    @content;
  }
}

@mixin tBody($selector) {
  #{$selector} {
    border: $table-border-color;

    tr {
      &:nth-child(even) {
        background-color: map-get($color_map, gray);
      }

      &:hover {
        background-color: map-get($color_map, grayer) !important;
      }

      td {
        color: $blue !important;
        border: none !important;
        border-right: $table-border-color !important;
        max-width: 20rem;
        word-break: break-word;

        img {
          width: 3.5rem;
          height: 3.5rem;
          object-fit: contain;
        }

        &:first-child {
          padding-left: 1rem;
          padding-right: 1rem;
        }

        @content; //This is a special case
      }
    }
  }
}

@mixin tPagination($selector) {
  #{$selector} {
    ul.pagination {
      border: none !important;

      li.page-item {
        cursor: pointer;
        border: $table-border-color !important;

        &:not(:nth-last-child(2)) {
          border-right: none !important;
        }

        &:first-child,
        &:last-child {
          display: none;
        }

        &:nth-child(2),
        &:nth-last-child(2) {
          span {
            transform: scaleY(1.5);
            display: inline-block;
          }
        }

        & .page-link,
        &.disabled .page-link {
          background: none;
        }

        & .page-link {
          color: $blue;
          font-size: small;
          padding: 0.9rem 1.2rem;

          @include mediabreak(small, portrait) {
            font-size: medium;
          }
          @include mediabreak(large, landscape) {
            padding: 0.8rem 1.1rem;
            font-size: 0.75rem;
          }
          @include mediabreak(larger, landscape, true, 1900px) {
            padding: 0.95rem 1.4rem;
            font-size: 1rem;
          }
        }

        &.disabled {
          border-color: $dark-gray !important;

          &:nth-child(2) {
            border-right: none !important;
          }
          &:nth-last-child(2) {
            border-left: none !important;
          }

          .page-link {
            color: $dark-gray;
          }
        }

        &.active .page-link {
          color: #fff;
          background: $blue;
        }

        &:nth-child(2) {
          border-bottom-left-radius: 0.35rem;
          border-top-left-radius: 0.35rem;
        }
        &:nth-last-child(2) {
          border-bottom-right-radius: 0.35rem;
          border-top-right-radius: 0.35rem;
        }
      }
    }

    @content;
  }
}

@mixin fieldsContainer {
  @media screen and (orientation: landscape) and (min-width: 640px) {
    @include form-mix;
  }
  @media screen and (orientation: portrait) and (min-width: 768px) {
    @include form-mix;
  }
  @content;
}

@mixin label($selector) {
  #{$selector} {
    width: 100%;
    color: $blue;
    margin-bottom: 0.2rem;
    font-size: 0.8rem;
    color: #808080;
    @content;
  }
}

@mixin formGroup($selector) {
  #{$selector} {
    position: relative;
    @include form-flexings;
    @content;
  }
}

@mixin formControl($selector) {
  #{$selector} {
    color: #615a5a;
    font-size: 0.8rem;

    &[readonly] {
      background-color: #fff;
    }

    &:focus {
      box-shadow: none;
    }

    &.ng-touched {
      &.ng-invalid {
        border: 2px solid $red;
      }

      &.ng-valid {
        &:focus.ng-dirty,
        &.ng-select-focused.ng-dirty {
          border: 2px solid $green;
        }
      }

      &[readonly] {
        border: 1px solid map-get($color_map, form-gray) !important;
      }

      & ~ .error-message {
        display: block;
      }

      &[readonly] ~ .error-message {
        display: none !important;
      }
    }

    &[readonly] {
      cursor: default;
      &:focus {
        border: 1px solid map-get($color_map, form-gray) !important;
      }
    }

    &.ng-untouched {
      & ~ .error-message {
        display: none;
      }
    }

    @content;
  }
}

@mixin select($selector) {
  #{$selector} {
    .ng-dropdown-panel {
      z-index: 3;

      .ng-dropdown-panel-items {
        .ng-option {
          &.ng-option-marked {
            small,
            a {
              font-weight: bold;
            }
          }
        }
      }

      .scroll-host {
        left: -0.75rem;
        top: 0.35rem;
        background: #fff;
        border: solid map-get($color_map, form-gray);
        border-width: 0 1px 1px;

        .scrollable-content {
          padding: 0 1rem;
        }
      }
    }

    &.ng-select-opened .ng-select-container {
      z-index: 3;
    }

    .ng-select-container {
      .ng-placeholder {
        color: #6c757d;
      }

      &.ng-has-value .ng-placeholder {
        display: none;
      }
    }

    &.ng-untouched {
      &.ng-invalid .ng-select-container .ng-placeholder,
      &.image-status .ng-select-container .ng-placeholder {
        display: block;
      }
      &.ng-valid .ng-select-container .ng-placeholder {
        display: none;
      }
    }

    &.ng-touched {
      &.ng-pristine,
      &.ng-invalid {
        .ng-select-container .ng-placeholder {
          display: block;
        }
      }
      &.ng-invalid .ng-select-container .ng-placeholder {
        display: block !important;
      }
      &.ng-pristine .ng-select-container.ng-has-value .ng-placeholder {
        display: none;
      }
    }

    &.ng-dirty.is-in-modal .ng-select-container.ng-has-value .ng-placeholder {
      display: none;
    }

    &.ng-select-filtered .ng-select-container .ng-placeholder,
    &.ng-select-filtered.ng-select-opened .ng-select-container .ng-placeholder {
      display: none !important;
    }

    .ng-clear-wrapper .ng-clear {
      color: map-get($color_map, form-gray);
    }

    .ng-arrow-wrapper {
      width: 1rem;

      .ng-arrow {
        height: 0.5rem;
        width: 0.5rem;
        border-color: map-get($color_map, form-gray);
        border-style: solid;
        border-width: 0 2px 2px 0;
        -webkit-transform: rotate(45deg);
        transform: rotate(45deg);
        top: -0.15rem;
      }
    }

    @content;
  }
}

@mixin selectors($selectors...) {
  @for $i from 0 to length($selectors) {
    $selector-name: nth($selectors, $i + 1);
    @if $selector-name == ".floating-loading" {
      #{$selector-name} {
        font-size: 0.8rem;
        position: absolute;
        font-size: smaller;
        right: 0;
      }
    } @else if $selector-name == ".form-group .error-message" {
      #{$selector-name} {
        color: $red;
        font-size: 13px;

        @include breakpoint(medium) {
          font-size: 13px;
        }

        @include breakpoint(large) {
          font-size: 13px;
        }
      }
    } @else if $selector-name == "button" {
      #{$selector-name} {
        margin-left: auto;
        @include shared-btn-confs;

        @media (max-width: 768px) {
          margin: 10px 0px;
          margin-left: 0px !important;
          font-size: 0.7rem;
        }
      }
    }
  }
}
